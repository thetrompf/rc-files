#!/bin/bash
function randpass {
	passlength=6
	[ ! -z "$1" ] && passlength=$1
	printf "%s\n" `< /dev/urandom tr -dc A-Za-z0-9 | head -c$passlength`
}

function ghblame {
	if [[ ! -e $1 ]]; then
		printf "%s %s\n" "$1" "does not exist" >&2
		return 1
	fi
	local abs_path=$(cd "${1%/*}" &>/dev/null; printf "%s/%s" "$(pwd)" "${1##*/}")
	local file_dir=${abs_path%/*}

	local in_git_repo
	[ -d $file_dir/.git ] || (cd $file_dir; git rev-parse --git-dir) > /dev/null 2>&1
	in_git_repo=$?
	if [[ $in_git_repo != 0 ]]; then
		printf "%s\n" "Not in a git repo" >&2
		return in_git_repo
	fi

	local root=$(cd $file_dir >/dev/null; git rev-parse --show-toplevel)
	local rel_path=${abs_path#$root}
	local ref
	ref=$(cd $root >/dev/null; git symbolic-ref HEAD 2>/dev/null)
	if [[ $? != 0 ]]; then
		printf "%s\n" "Not on any branch" >&2
		return 1
	fi

	local branch=${ref#refs/heads/}
	local remote_name=$(cd $root >/dev/null; git config branch.$branch.remote 2>/dev/null)
	local remote_url=$(cd $root >/dev/null; git config remote.$remote_name.url 2>/dev/null)

	if [[ ! $remote_url =~ 'github.com' ]]; then
		printf "%s\n" "Upstream is not a github repo" >&2
		return 1
	fi
	local remote_dir
	remote_dir=$(echo $remote_url | sed "s#https://github.com/##")
	remote_dir=$(echo $remote_url | sed "s/git@github.com://")
	open "https://github.com/$remote_dir/blame/$branch$rel_path"
}

function tmux-workspace {
	local dir=$PWD;
	cd ${1:-${dir}};
	tmux new-session \; split-window -h \; select-pane -L \; split-window \; attach
	cd $dir;
}
